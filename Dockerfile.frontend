# Stage 1: Build the frontend
FROM node:22-alpine as build-stage

# Set the working directory
WORKDIR /app

# Set the Version Environment Variable for the frontend
ARG PUBLIC_VERSION=${PUBLIC_VERSION}

# Copy package files and install dependencies
COPY package*.json ./
RUN npm install --frozen-lockfile
COPY frontend/package*.json ./frontend/
RUN cd frontend && npm install --frozen-lockfile

# Copy the frontend app source code
COPY frontend/ ./frontend/

# Build the frontend app
RUN cd frontend && npm run build


# Stage 2: Setup the production environment
FROM node:22-alpine

# Set the working directory
WORKDIR /app

# Copy built files from the build-stage
COPY --from=build-stage /app/frontend/build ./frontend/build

# Copy the app source code
COPY package*.json ./
RUN npm install --omit=dev --frozen-lockfile
COPY frontend/package*.json ./frontend/
RUN cd frontend && npm install --omit=dev --frozen-lockfile

COPY frontend/static ./frontend/static


# Expose the port that the app will run on
EXPOSE 3000

# Set the command to run the app when the container starts
CMD ["node", "frontend/build/index.js"]
